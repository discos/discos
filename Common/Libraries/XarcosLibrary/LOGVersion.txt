
Nel progetto c'è anche il file Xarcos.xmi che ne da una descrizione sommaria
Usando MainWidget e due Widget temporanea con il dovuto Refresh di cui uno è di plottaggio
Implementa le classi per la gestione del settaggio
	Specifiche
	headResult
	Data
Implementa 
gli 8 Spettrometri
inizializzandoli a valori dati da Specifiche

Il metodo Setting() con Imposta() ordina le specifiche in base alla struttura
	POL 0-3 NonPOL 0-7 POL4-7
e assegna gli ADC in base al tipo di quantizzazione
Ho modificato BbcFilter.cpp
Assegno il valore ADC0-ADC3 anche al gruppo Uno.
Funziona il Timer per l'integrazione
Ho implementato le funzionalità per gestire il vettore DataIntegrazione
Riempo in modo corretto i dati per l'intera integrazione
La versione di AdcConditioner è quella definitiva
Gli Adc sono inizializzati al giusto indirizzo Hardware
Vengono Vidualizzati correttamente i dati nella schemata di plottagio!!
ho implementato in modo veloce lo star e stop per l'integrazione
Implementa la struttura definitiva :
	xarcos
	GroupSpectrometer
	SingleSpectrometer
	Spectrometer
	ecc....
Il Timer funziona in xarcos... 

D_XARCOS_01 (14-Apr-2009)

Prima TAG in CVS
Aggistato la visualizzazione in Xplot dell'asse X PlotDataZero(da -band/2 a band/2)
e centrata la visualizzazione su f=0 quando banda=125.e6 in PlotData
Implementato la misura di Tp sui filtri...
controllo che i Dataready sia true prima di prendere i risultati dell'integrazione
controllo anche l'eccezione di Overflow r la visualizzo insiame ai dati in xplot
il thread per il recupero dei dati di integrazione e' scritto: 
	per evitare conflitti sul socket di comunicazione si usa un oggetto QMUTEX...
	per prendere tutte le misure Tp si usa un bool tp che sospende il recupero dei dati 
	di integrazione...
OK anche la misura Tp è normalizzata correttamente

Effettua con ThreadServer la connessione con il programma Client
	Preleva i comandi essenziali a,s,i,d
	Riceve correttamente Specifiche e le imposta(senza nessun controllo per ora!!!)

CORRETTO I CANALI 2-7 per il modo a 8 bit	
Gestisce le sezioni da 0-15 in modo variabile.
Sistemata la gestione degli errori a bassissimo livello!!

Introdotto un countInt e un CountTp nel GruppoS per controllare e normalizzare le misure TP!!
Sostituito i QMutex con un mia classe Mutex ed eliminta la var bool Tp...
Introdotti nella classe TpThread due (miei) Semaphore per la sincronizzazione nel 
recupero dei dati.
Sostituito il QThread con un mio oggetto Thread che usa lo standard Posix

Implementata la gestione dello stato dello spettropolarimetro
Aggiunto il pushButton Broadcast per velocizzare il setting:
imposta a di tutte le sezioni i valori della corrente

Commentati i mutex in SingleSpectrometer

D_XARCOS_02 (07-ott-2009)

Da targare Seconda TAG in CVS

Creata la documentazione con il tool doxygen 
	comando -> doxygen myscript_doxygen

Introdotta la classe CFitsWriter per il salvataggio dei dati in formato MBFits
effettua correttamente i salvataggio!!
Visualizzati tutti 4 parametri!! è molto lenta!!
Senzan controllo di memoria!!!

D_XARCOS_03 (02-dic-2009)
Sistemato:
	vector<SingleSpectrometer*> Spettrometro;
	vector<AdcConditioner*> Adc;
	deallocato tutti i puntatori prima della chiusura del programma
	
D_XARCOS_04 (03-dic-2009)

	Aggiunti gli elementi della seconda scheda
	sistemato la mascera xarcos in modo da limitare gli ingressi a Modo8Bit
	cioè 2-7 e 10-15
	Riduco il XPlot ai soli xx yy i parametri del modo polarimetrico
	Recupero tutti gli spettri correttamente e li salvo in MBfits
	
D_XARCOS_05_DOPPIO (04-dic-2009)

	Salvo un file con numerazione progressiva ad ogni nuova integrazione

	Modificato in define.h #define DEFAULT_BINS 2048//4096
	
D_XARCOS_06_DOPPIO (18-gen-2010)	

Sistemato il setting di sezioni non polarimetriche che non usano tutto il gruppo

D_XARCOS_07_DOPPIO (24-may-2010)

Sistemato invertiti la posizione nel char status
aggiunto serve nel componente per far effettuare allo scheduler
il calcolo della tsys
bool GroupSpectrometer::GetDataTpZero(bool modo)

D_XARCOS_08_LIB (26-may-2010)

aggiornati nomi file 
Mutex -> XaMutex
Thread -> XaThread
Semaphore -> XaSemaphore

Modificato SingleSpectrometer::GetData() 
Inserito: const int noff = 4096;
per recuperare correttamente i valori indipendentemente dal numero bins

Modificato SingleSpectrometer::Init()
in modo tale che ritorni i vero valore di banda settato

D_XARCOS_09_LIB (24-jun-2010)

Introdotto per gestire la mappatura in XBackends
	int input;
	vector<bool> enabled;
	modificata la funzione GroupSpectrometer::Init();
	
D_XARCOS_10_LIB (9-jul-2010)

21/07/2010
La libreria funziona