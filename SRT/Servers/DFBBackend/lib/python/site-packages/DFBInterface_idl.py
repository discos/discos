# Python stubs generated by omniidl from ../idl/DFBInterface.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "corbaidl.idl"
import corbaidl_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")
# #include "boxes.idl"
import boxes_idl
_0_CORBA = omniORB.openModule("CORBA")
_0_CORBA__POA = omniORB.openModule("CORBA__POA")
# #include "CosProperty.idl"
import CosProperty_idl
_0_CosPropertyService = omniORB.openModule("CosPropertyService")
_0_CosPropertyService__POA = omniORB.openModule("CosPropertyService__POA")
# #include "acscomponent.idl"
import acscomponent_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")
# #include "acscommon.idl"
import acscommon_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")
_0_log_audience = omniORB.openModule("log_audience")
_0_log_audience__POA = omniORB.openModule("log_audience__POA")
_0_acscommon = omniORB.openModule("acscommon")
_0_acscommon__POA = omniORB.openModule("acscommon__POA")
# #include "acserr.idl"
import acserr_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
# #include "baci.idl"
import baci_idl
_0_ACS = omniORB.openModule("ACS")
_0_ACS__POA = omniORB.openModule("ACS__POA")
# #include "ACSBulkDataError.idl"
import ACSBulkDataError_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
_0_ACSBulkDataError = omniORB.openModule("ACSBulkDataError")
_0_ACSBulkDataError__POA = omniORB.openModule("ACSBulkDataError__POA")
# #include "AVStreams.idl"
import AVStreams_idl
_0_AVStreams = omniORB.openModule("AVStreams")
_0_AVStreams__POA = omniORB.openModule("AVStreams__POA")
# #include "bulkData.idl"
import bulkData_idl
_0_bulkdata = omniORB.openModule("bulkdata")
_0_bulkdata__POA = omniORB.openModule("bulkdata__POA")
# #include "ACSBulkDataStatus.idl"
import ACSBulkDataStatus_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
_0_ACSBulkDataStatus = omniORB.openModule("ACSBulkDataStatus")
_0_ACSBulkDataStatus__POA = omniORB.openModule("ACSBulkDataStatus__POA")
# #include "bulkDataReceiver.idl"
import bulkDataReceiver_idl
_0_bulkdata = omniORB.openModule("bulkdata")
_0_bulkdata__POA = omniORB.openModule("bulkdata__POA")
# #include "bulkDataSender.idl"
import bulkDataSender_idl
_0_bulkdata = omniORB.openModule("bulkdata")
_0_bulkdata__POA = omniORB.openModule("bulkdata__POA")
# #include "BackendsDefinitions.idl"
import BackendsDefinitions_idl
_0_Backends = omniORB.openModule("Backends")
_0_Backends__POA = omniORB.openModule("Backends__POA")
# #include "ManagementErrors.idl"
import ManagementErrors_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
_0_ManagementErrors = omniORB.openModule("ManagementErrors")
_0_ManagementErrors__POA = omniORB.openModule("ManagementErrors__POA")
# #include "ManagmentDefinitions.idl"
import ManagmentDefinitions_idl
_0_Management = omniORB.openModule("Management")
_0_Management__POA = omniORB.openModule("Management__POA")
# #include "ComponentErrors.idl"
import ComponentErrors_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
_0_ComponentErrors = omniORB.openModule("ComponentErrors")
_0_ComponentErrors__POA = omniORB.openModule("ComponentErrors__POA")
# #include "BackendsErrors.idl"
import BackendsErrors_idl
_0_ACSErr = omniORB.openModule("ACSErr")
_0_ACSErr__POA = omniORB.openModule("ACSErr__POA")
_0_BackendsErrors = omniORB.openModule("BackendsErrors")
_0_BackendsErrors__POA = omniORB.openModule("BackendsErrors__POA")
# #include "ReceiversDefinitions.idl"
import ReceiversDefinitions_idl
_0_Receivers = omniORB.openModule("Receivers")
_0_Receivers__POA = omniORB.openModule("Receivers__POA")
# #include "GenericBackend.idl"
import GenericBackend_idl
_0_Backends = omniORB.openModule("Backends")
_0_Backends__POA = omniORB.openModule("Backends__POA")

#
# Start of module "Backends"
#
__name__ = "Backends"
_0_Backends = omniORB.openModule("Backends", r"../idl/DFBInterface.idl")
_0_Backends__POA = omniORB.openModule("Backends__POA", r"../idl/DFBInterface.idl")


# interface DFB
_0_Backends._d_DFB = (omniORB.tcInternal.tv_objref, "IDL:alma/Backends/DFB:1.0", "DFB")
omniORB.typeMapping["IDL:alma/Backends/DFB:1.0"] = _0_Backends._d_DFB
_0_Backends.DFB = omniORB.newEmptyClass()
class DFB (_0_Backends.GenericBackend):
    _NP_RepositoryId = _0_Backends._d_DFB[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Backends.DFB = DFB
_0_Backends._tc_DFB = omniORB.tcInternal.createTypeCode(_0_Backends._d_DFB)
omniORB.registerType(DFB._NP_RepositoryId, _0_Backends._d_DFB, _0_Backends._tc_DFB)

# DFB operations and attributes
DFB._d_initialize = (((omniORB.tcInternal.tv_string,0), ), (), {_0_ComponentErrors.ComponentErrorsEx._NP_RepositoryId: _0_ComponentErrors._d_ComponentErrorsEx, _0_BackendsErrors.BackendsErrorsEx._NP_RepositoryId: _0_BackendsErrors._d_BackendsErrorsEx})

# DFB object reference
class _objref_DFB (_0_Backends._objref_GenericBackend):
    _NP_RepositoryId = DFB._NP_RepositoryId

    def __init__(self):
        _0_Backends._objref_GenericBackend.__init__(self)

    def initialize(self, *args):
        return _omnipy.invoke(self, "initialize", _0_Backends.DFB._d_initialize, args)

    __methods__ = ["initialize"] + _0_Backends._objref_GenericBackend.__methods__

omniORB.registerObjref(DFB._NP_RepositoryId, _objref_DFB)
_0_Backends._objref_DFB = _objref_DFB
del DFB, _objref_DFB

# DFB skeleton
__name__ = "Backends__POA"
class DFB (_0_Backends__POA.GenericBackend):
    _NP_RepositoryId = _0_Backends.DFB._NP_RepositoryId


    _omni_op_d = {"initialize": _0_Backends.DFB._d_initialize}
    _omni_op_d.update(_0_Backends__POA.GenericBackend._omni_op_d)

DFB._omni_skeleton = DFB
_0_Backends__POA.DFB = DFB
omniORB.registerSkeleton(DFB._NP_RepositoryId, DFB)
del DFB
__name__ = "Backends"

#
# End of module "Backends"
#
__name__ = "DFBInterface_idl"

_exported_modules = ( "Backends", )

# The end.
