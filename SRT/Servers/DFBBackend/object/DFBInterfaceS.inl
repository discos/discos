// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler v1.6.5 ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html


ACE_INLINE
void
POA_Backends::DFB::_get_name_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_ACS::ACSComponent * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_ACS::ACSComponent::_get_name_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_componentState_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_ACS::ACSComponent * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_ACS::ACSComponent::_get_componentState_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::get_characteristic_by_name_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_ACS::CharacteristicModel * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_ACS::CharacteristicModel::get_characteristic_by_name_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::find_characteristic_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_ACS::CharacteristicModel * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_ACS::CharacteristicModel::find_characteristic_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::get_all_characteristics_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_ACS::CharacteristicModel * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_ACS::CharacteristicModel::get_all_characteristics_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::descriptor_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_ACS::CharacteristicComponent * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_ACS::CharacteristicComponent::descriptor_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::connect_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_bulkdata::BulkDataSender * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_bulkdata::BulkDataSender::connect_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::disconnect_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_bulkdata::BulkDataSender * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_bulkdata::BulkDataSender::disconnect_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::startSend_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_bulkdata::BulkDataSender * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_bulkdata::BulkDataSender::startSend_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::paceData_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_bulkdata::BulkDataSender * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_bulkdata::BulkDataSender::paceData_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::stopSend_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_bulkdata::BulkDataSender * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_bulkdata::BulkDataSender::stopSend_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::command_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Management::CommandInterpreter * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Management::CommandInterpreter::command_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_time_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_time_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_backendName_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_backendName_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_bandWidth_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_bandWidth_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_frequency_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_frequency_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_sampleRate_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_sampleRate_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_attenuation_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_attenuation_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_polarization_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_polarization_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_bins_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_bins_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_feed_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_feed_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_systemTemperature_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_systemTemperature_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_inputSection_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_inputSection_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_inputsNumber_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_inputsNumber_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_sectionsNumber_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_sectionsNumber_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_integration_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_integration_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_status_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_status_skel (
      server_request,
      servant_upcall,
      impl
    );
}

ACE_INLINE
void
POA_Backends::DFB::_get_busy_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::_get_busy_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::sendHeader_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::sendHeader_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::sendData_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::sendData_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::sendStop_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::sendStop_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::terminate_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::terminate_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::setSection_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::setSection_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::setAttenuation_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::setAttenuation_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::enableChannels_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::enableChannels_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::setIntegration_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::setIntegration_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::setTime_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::setTime_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::getTpi_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::getTpi_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::getZero_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::getZero_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::setKelvinCountsRatio_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::setKelvinCountsRatio_skel (
      server_request,
      servant_upcall,
      impl
    );
}

// TAO_IDL - Generated from
// be/be_interface.cpp:2043

ACE_INLINE
void
POA_Backends::DFB::getInputs_skel (
    TAO_ServerRequest & server_request,
    void * servant_upcall,
    void * servant
  )
{
  POA_Backends::GenericBackend * const impl = static_cast<POA_Backends::DFB *> (servant);
  POA_Backends::GenericBackend::getInputs_skel (
      server_request,
      servant_upcall,
      impl
    );
}

