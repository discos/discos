/* ***************************************************************************/
/* INAF - Istituto Nazionale di AstroFisica                                  */
/* IRA - Istituto di Radioastronomia                                         */
/* OAC - Osservatorio Astronomico di Cagliari                                */
/*                                                                           */
/* $Id: SRTWeatherStation.idl,v 1.1 2011-04-06 13:59:01 spoppi Exp $           */
/*                                                                           */
/* This code is under GNU General Public Licence (GPL).                      */
/*                                                                           */
/* Who					When		What                 */
/* Sergio Poppi				18/02/2010      Creation             */
/*                                                                           */
/* ***************************************************************************/

#ifndef _SRTMETEOSTATION_IDL_

#define _SRTMETEOSTATION_IDL_

#include <baci.idl>
//#include <AntennaErrors.idl>
// #include <ComponentErrors.idl>
#include "GenericWeatherStation.idl"

#pragma prefix "alma"




/**
	 * This IDL module describes the CORBA interface of the Meteo Station.
	 * @author <a href=mailto:spoppi@ca.astro.it> Sergio Poppi</a>
	 * INAF - Istituto Nazionale di AstroFisica
	 * OAC - Osservatorio Astronomico di Cagliari
	 * <br> 
	*/

module Weather {
	
	/**
	

	*/


 


	
     

	interface SRTStation :GenericWeatherStation {
		/**
		 
		*/
		
		

		/**
		Get Parameters METEO STATION, for compatibility with the component 
		working at the Medicina telescope

		@return parameters

		
		*/
//		parameters getData();
		/**
		Get  the average wind speed

		*/

		double getWindSpeedAverage();
		/**
		Gets  the peak wind speed

		*/

		double getWindspeedPeak();
		/**
		Gets  the   wind dir max

		*/

		double getWindDir();
	 
		/**
		Gets  the relative humidity
		*/
		double getHumidity();
		/**
		Gets the air temperature

		*/

		double getTemperature();
		/**
		Gets the air pressure

		*/
		double getPressure();

		/**/
		readonly attribute ACS::RWdouble windspeedpeak;

						
	};
};
#endif
