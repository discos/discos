#ifndef __SRTDBESM_IDL__
#define __SRTDBESM_IDL__

#include <baci.idl>

#include "GenericBackend.idl"
#include <ComponentErrors.idl>
#pragma prefix "alma"
/** 
* SRT DBESM component.
* @author <a href=mailto:matteo.fiorentini@inaf.it>Matteo Fiorentini</a>
*/

module Backends { 
	/*
	<h2>DBE Switch Matrix Interface </h2>
	@
	*/
	interface SRTDBESM: ACS::CharacteristicComponent {

	/*
	 DBESM boards addresses 
        */
        readonly attribute ACS::ROlong addr_1, addr_2, addr_3, addr_4;

	/*
	 DBESM boards registers values
        */
        readonly attribute ACS::ROlongSeq regs_1, regs_2, regs_3, regs_4;

	/*
	 DBESM boards attenuators values
        */
	readonly attribute ACS::ROdoubleSeq atts_1, atts_2, atts_3, atts_4;

        /*
	 DBESM boards amplifiers values
        */
	readonly attribute ACS::ROlongSeq amps_1, amps_2, amps_3, amps_4;

        /*
	 DBESM boards addresses and components values
        */
	readonly attribute ACS::ROlongSeq eqs_1, eqs_2, eqs_3, eqs_4;

        /*
	 DBESM boards band-pass filters values
        */
	readonly attribute ACS::ROlongSeq bpfs_1, bpfs_2, bpfs_3, bpfs_4;

        /*
	 DBESM boards voltage values
        */
	readonly attribute ACS::ROdoubleSeq volts_1, volts_2, volts_3, volts_4;

        /*
	 DBESM boards temperature values
        */
	readonly attribute ACS::ROdouble temps_1, temps_2, temps_3, temps_4;

        /*
	 names of configurations currently set on the DBESM boards
        */
        readonly attribute ACS::ROstring cfg_1, cfg_2, cfg_3, cfg_4;

        /*
	 set whole DBESM configuration 
        */
	void set_all(in string cfg_name) raises (BackendsErrors::BackendsErrorsEx);

        /*
	 set a single DBESM board configuration
        */
	void set_mode(in short b_addr, in string cfg_name) raises (BackendsErrors::BackendsErrorsEx);

        /*
	 set a single DBESM attenuator on a particular board and channel
        */
	void set_att(in short b_addr, in short out_ch, in double att_val) raises (BackendsErrors::BackendsErrorsEx);

        /*
	 store whole DBESM configuration
        */
	void store_allmode(in string cfg_name) raises (BackendsErrors::BackendsErrorsEx);

        /*
	 delete DBESM configuration
        */
	void clr_mode(in string cfg_name) raises (BackendsErrors::BackendsErrorsEx);

        /*
	 get single DBESM board status: registers and attenuators values
        */
	void get_status(in short b_addr) raises (BackendsErrors::BackendsErrorsEx);

        /*
	 get single DBESM board amps, eqs and bpfs values 
        */
	void get_comp(in short b_addr) raises (BackendsErrors::BackendsErrorsEx);

        /*
	 get single DBESM board voltages and temperatures 
        */
	void get_diag(in short b_addr) raises (BackendsErrors::BackendsErrorsEx);

        /*
	 get configurations currently set on the DBESM boards
        */
	void get_cfg() raises (BackendsErrors::BackendsErrorsEx);

        /*
	 set one or more attenuators depending on which output is requested
        */
        void set_dbeatt(in string out_dbe, in string att_val) raises (BackendsErrors::BackendsErrorsEx);

        /*
	 get one or more attenuator values depending on which output is requested
        */
        void get_dbeatt(in string out_dbe) raises (BackendsErrors::BackendsErrorsEx);
	
};

};

#endif
