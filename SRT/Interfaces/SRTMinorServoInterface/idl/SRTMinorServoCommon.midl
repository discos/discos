/***************************************************************\
 *  Author: Giuseppe Carboni <giuseppe.carboni@inaf.it>
\***************************************************************/
#ifndef __SRTMINORSERVOCOMMON_MIDL__
#define __SRTMINORSERVOCOMMON_MIDL__

#include <baci.idl>
#include <enumpropMACRO.idl>

#pragma prefix "alma"

module MinorServo
{
    enum SRTMinorServoFocalConfiguration
    {
        CONFIGURATION_UNKNOWN,
        CONFIGURATION_PARK,
        CONFIGURATION_PRIMARY,
        CONFIGURATION_GREGORIAN1,
        CONFIGURATION_GREGORIAN2,
        CONFIGURATION_GREGORIAN3,
        CONFIGURATION_GREGORIAN4,
        CONFIGURATION_GREGORIAN5,
        CONFIGURATION_GREGORIAN6,
        CONFIGURATION_GREGORIAN7,
        CONFIGURATION_GREGORIAN8,
        CONFIGURATION_BWG1,
        CONFIGURATION_BWG2,
        CONFIGURATION_BWG3,
        CONFIGURATION_BWG4
    };

    ACS_ENUM(SRTMinorServoFocalConfiguration);

    enum SRTMinorServoControlStatus
    {
        CONTROL_DISCOS,
        CONTROL_VBRAIN
    };

    ACS_ENUM(SRTMinorServoControlStatus);

    enum SRTMinorServoGregorianCoverStatus
    {
        COVER_STATUS_UNKNOWN,
        COVER_STATUS_OPEN,
        COVER_STATUS_CLOSED
    };

    ACS_ENUM(SRTMinorServoGregorianCoverStatus);

    enum SRTMinorServoCabinetStatus
    {
        DRIVE_CABINET_OK,
        DRIVE_CABINET_WARNING,
        DRIVE_CABINET_ERROR
    };

    ACS_ENUM(SRTMinorServoCabinetStatus);

    enum SRTMinorServoOperativeMode
    {
        OPERATIVE_MODE_UNKNOWN,
        OPERATIVE_MODE_SETUP,
        OPERATIVE_MODE_STOW,
        OPERATIVE_MODE_STOP,
        OPERATIVE_MODE_PRESET,
        OPERATIVE_MODE_PROGRAMTRACK
    };

    ACS_ENUM(SRTMinorServoOperativeMode);

    enum SRTMinorServoBossStatus
    {
        BOSS_STATUS_UNCONFIGURED,
        BOSS_STATUS_SETUP_IN_PROGRESS,
        BOSS_STATUS_PARK_IN_PROGRESS,
        BOSS_STATUS_ERROR,
        BOSS_STATUS_CONFIGURED
    };

    ACS_ENUM(SRTMinorServoBossStatus);
};
#endif
